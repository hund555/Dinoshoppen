// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations
{
    [DbContext(typeof(DinoDbContext))]
    [Migration("20201008105216_added_seeding")]
    partial class added_seeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataLayer.Entities.Cart", b =>
                {
                    b.Property<int?>("DinosaurId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("RabatId")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("DinosaurId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RabatId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("DataLayer.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("Mail")
                        .IsUnique()
                        .HasFilter("[Mail] IS NOT NULL");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "Sønderborgvej 1",
                            Mail = "customer1@gmail.com",
                            Name = "Customer1"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "Sønderborgvej 2",
                            Mail = "customer2@gmail.com",
                            Name = "Customer2"
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "Sønderborgvej 3",
                            Mail = "customer3@gmail.com",
                            Name = "Customer3"
                        },
                        new
                        {
                            CustomerId = 4,
                            Address = "Sønderborgvej 4",
                            Mail = "customer4@gmail.com",
                            Name = "Customer4"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.Diet", b =>
                {
                    b.Property<int>("DietId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DietName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DietId");

                    b.ToTable("Diet");

                    b.HasData(
                        new
                        {
                            DietId = 1,
                            DietName = "Carnivore"
                        },
                        new
                        {
                            DietId = 2,
                            DietName = "Herbivore"
                        },
                        new
                        {
                            DietId = 3,
                            DietName = "Omnivore"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.Dinosaur", b =>
                {
                    b.Property<int>("DinosaurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DietId")
                        .HasColumnType("int");

                    b.Property<double>("DinoHeight")
                        .HasColumnType("float");

                    b.Property<double>("DinoLenght")
                        .HasColumnType("float");

                    b.Property<string>("DinoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DinoPrice")
                        .HasColumnType("float");

                    b.Property<double>("DinoWeight")
                        .HasColumnType("float");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("int");

                    b.HasKey("DinosaurId");

                    b.HasIndex("DietId");

                    b.HasIndex("PromotionId");

                    b.ToTable("Dinosaurs");

                    b.HasData(
                        new
                        {
                            DinosaurId = 1,
                            DietId = 1,
                            DinoHeight = 6.0999999999999996,
                            DinoLenght = 13.0,
                            DinoName = "Tyrannosaurus Rex",
                            DinoPrice = 11650000.0,
                            DinoWeight = 14000.0
                        },
                        new
                        {
                            DinosaurId = 2,
                            DietId = 1,
                            DinoHeight = 3.0,
                            DinoLenght = 9.0,
                            DinoName = "Carnotaurus",
                            DinoPrice = 3500000.0,
                            DinoWeight = 3000.0
                        },
                        new
                        {
                            DinosaurId = 3,
                            DietId = 2,
                            DinoHeight = 6.0,
                            DinoLenght = 22.0,
                            DinoName = "Brontosaurus",
                            DinoPrice = 15000000.0,
                            DinoWeight = 15000.0
                        },
                        new
                        {
                            DinosaurId = 4,
                            DietId = 3,
                            DinoHeight = 4.5,
                            DinoLenght = 3.7999999999999998,
                            DinoName = "Ornithomimus",
                            DinoPrice = 365000.0,
                            DinoWeight = 170.0
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.Promotion", b =>
                {
                    b.Property<int>("PromotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PromotionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PromotionRabat")
                        .HasColumnType("int");

                    b.Property<bool>("SoftDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("PromotionId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("DataLayer.Entities.Rabat", b =>
                {
                    b.Property<int>("RabatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RabatName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RabatProcent")
                        .HasColumnType("int");

                    b.Property<bool>("SoftDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("RabatId");

                    b.ToTable("Rabats");
                });

            modelBuilder.Entity("DataLayer.Entities.Cart", b =>
                {
                    b.HasOne("DataLayer.Entities.Customer", "Customer")
                        .WithMany("Carts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Entities.Dinosaur", "Dinosaur")
                        .WithMany("Carts")
                        .HasForeignKey("DinosaurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Entities.Rabat", "Rabat")
                        .WithMany("Carts")
                        .HasForeignKey("RabatId");
                });

            modelBuilder.Entity("DataLayer.Entities.Dinosaur", b =>
                {
                    b.HasOne("DataLayer.Entities.Diet", "Diet")
                        .WithMany("Dinosaurs")
                        .HasForeignKey("DietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Entities.Promotion", "Promotion")
                        .WithMany("Dinosaurs")
                        .HasForeignKey("PromotionId");
                });
#pragma warning restore 612, 618
        }
    }
}
