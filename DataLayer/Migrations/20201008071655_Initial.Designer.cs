// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations
{
    [DbContext(typeof(DinoDbContext))]
    [Migration("20201008071655_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataLayer.Entities.Cart", b =>
                {
                    b.Property<int?>("DinosaurId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("RabatId")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("DinosaurId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RabatId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("DataLayer.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DataLayer.Entities.Diet", b =>
                {
                    b.Property<int>("DietId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DietName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DietId");

                    b.ToTable("Diet");
                });

            modelBuilder.Entity("DataLayer.Entities.Dinosaur", b =>
                {
                    b.Property<int>("DinosaurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DietId")
                        .HasColumnType("int");

                    b.Property<double>("DinoHeight")
                        .HasColumnType("float");

                    b.Property<double>("DinoLenght")
                        .HasColumnType("float");

                    b.Property<string>("DinoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DinoPrice")
                        .HasColumnType("float");

                    b.Property<double>("DinoWeight")
                        .HasColumnType("float");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("int");

                    b.HasKey("DinosaurId");

                    b.HasIndex("DietId");

                    b.HasIndex("PromotionId");

                    b.ToTable("Dinosaurs");
                });

            modelBuilder.Entity("DataLayer.Entities.Promotion", b =>
                {
                    b.Property<int>("PromotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PromotionRabat")
                        .HasColumnType("int");

                    b.Property<string>("promotionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PromotionId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("DataLayer.Entities.Rabat", b =>
                {
                    b.Property<int>("RabatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RabatName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RabatProcent")
                        .HasColumnType("int");

                    b.HasKey("RabatId");

                    b.ToTable("Rabats");
                });

            modelBuilder.Entity("DataLayer.Entities.Cart", b =>
                {
                    b.HasOne("DataLayer.Entities.Customer", "Customer")
                        .WithMany("Carts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Entities.Dinosaur", "Dinosaur")
                        .WithMany("Carts")
                        .HasForeignKey("DinosaurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Entities.Rabat", "Rabat")
                        .WithMany("Carts")
                        .HasForeignKey("RabatId");
                });

            modelBuilder.Entity("DataLayer.Entities.Dinosaur", b =>
                {
                    b.HasOne("DataLayer.Entities.Diet", "Diet")
                        .WithMany("Dinosaurs")
                        .HasForeignKey("DietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Entities.Promotion", "Promotion")
                        .WithMany("Dinosaurs")
                        .HasForeignKey("PromotionId");
                });
#pragma warning restore 612, 618
        }
    }
}
